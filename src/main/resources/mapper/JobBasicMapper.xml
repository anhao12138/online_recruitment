<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.online_re.mapper.JobBasicMapper" >
  <resultMap id="BaseResultMap" type="com.example.online_re.domain.JobBasic" >
    <id column="basic_id" property="basicId" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="major" property="major" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="VARCHAR" />
    <result column="agelimit" property="agelimit" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    basic_id, name, major, phone, email, state, sex, agelimit
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from job_basic
    where basic_id = #{basicId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from job_basic
    where basic_id = #{basicId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.online_re.domain.JobBasic" >
    insert into job_basic (basic_id, name, major, 
      phone, email, state, 
      sex, agelimit)
    values (#{basicId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{major,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{state,jdbcType=VARCHAR}, 
      #{sex,jdbcType=VARCHAR}, #{agelimit,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.online_re.domain.JobBasic" >
    insert into job_basic
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="basicId != null" >
        basic_id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="major != null" >
        major,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="agelimit != null" >
        agelimit,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="basicId != null" >
        #{basicId,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="major != null" >
        #{major,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="agelimit != null" >
        #{agelimit,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.online_re.domain.JobBasic" >
    update job_basic
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="major != null" >
        major = #{major,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="agelimit != null" >
        agelimit = #{agelimit,jdbcType=VARCHAR},
      </if>
    </set>
    where basic_id = #{basicId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.online_re.domain.JobBasic" >
    update job_basic
    set name = #{name,jdbcType=VARCHAR},
      major = #{major,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      state = #{state,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      agelimit = #{agelimit,jdbcType=VARCHAR}
    where basic_id = #{basicId,jdbcType=INTEGER}
  </update>
</mapper>